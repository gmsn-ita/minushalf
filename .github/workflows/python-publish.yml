name: Build and upload to PyPI

env:
  CIBW_BUILD: cp36-* cp38-* cp39-*
  CIBW_BEFORE_BUILD: pip install --upgrade pip && pip install numpy == 1.19.4
  CIBW_BEFORE_TEST: pip install --upgrade pip && pip install pytest && pip install -r requirements.txt
  CIBW_TEST_COMMAND: pytest {package}/tests
  NPY_DISABLE_CPU_FEATURES: AVX512F AVX512_SKX

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.many_linux_tag }}
      CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.many_linux_tag }}
      CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.many_linux_tag }}
      CIBW_MANYLINUX_PPC64LE_IMAGE: ${{ matrix.many_linux_tag }}
      CIBW_MANYLINUX_S390X_IMAGE: ${{ matrix.many_linux_tag }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        many_linux_tag: [manylinux1, manylinux2010, manylinux2014]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"
      
      - name: Before build
        run: pip install --upgrade pip

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Build sdist
        run: pip install --upgrade pip && pip install numpy && python setup.py sdist build_src --inplace

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_api_token }}
          verbose: true
