"""
Implements the class that is responsible for handling the static wave
projections contained in the output files generated by VASP.
"""
from pathlib import Path
from pymatgen.io.vasp.outputs import BSVasprun
import pandas as pd
from minushalf.utils import (
    ORBITALS,
    ORBITAL_GROUP,
)


class Vasp:
    """
    Read output files generated by VASP (vasprun.xml) and extract
    characteristics related to the projection of the wave function.
    """

    def __init__(self, vasprun_path: str) -> None:
        """
        Args:
            vasprun_path (str): Path to vasprun.xml generated
            by VASP.
        """
        self.band_structure = vasprun_path

    @property
    def band_structure(self) -> BSVasprun:
        """
        Returns:
            Pymatgen class that represents a band structure
            derived from vasprun.xml file.
        """
        return self._band_structure

    @band_structure.setter
    def band_structure(self, vasprun_path: str) -> None:
        """
        Setter for band structure, recieves vasprun.xml path
        and transform it in a Pymatgen band structure.

        Args:
            vasprun_path (str): Path to vasprun.xml generated
            by VASP
        """
        path = Path(vasprun_path)
        vasprun = BSVasprun(filename=path.__str__(),
                            parse_projected_eigen=True)

        band_structure = vasprun.get_band_structure()

        if band_structure.is_spin_polarized:
            raise Exception(
                "The system is spin polarized, write a function that deal with it."
            )

        self._band_structure = band_structure

    def character_vbm(self) -> pd.DataFrame:
        """
        Get the character of each orbital of each atom
        in relation to the last valence band.

        Returns:
            projection_normalized_df (pandas.DataFrame):
            pandas dataframe that represents the character
            of each atom for each orbital group s, p and d in last
            valence band. For instance, for GaN:
                            d         p       s
            element
                Ga         16.0      6.0     0.0
                N           0.0     78.0     0.0
        """
        projections_vbm = self.band_structure.get_vbm()["projections"].values()

        if len(projections_vbm) == 0:
            raise Exception("Projections VBM not found in vasprun.xml")

        vbm_projection_array = list(projections_vbm)[0]
        return self._group_projection_df(vbm_projection_array)

    def character_cbm(self) -> pd.DataFrame:
        """
        Get the character of each orbital of each atom
        in relation to the first consuction band.

        Returns:
            projection_normalized_df (pandas.DataFrame):
            pandas dataframe that represents the character
            of each atom for each orbital group s, p and d in first
            conduction band. For instance, for GaN:
                           s     p    d
            element
              Ga          44.0  0.0  0.0
              N           56.0  0.0  0.0
        """
        projections_cbm = self.band_structure.get_cbm()["projections"].values()
        if len(projections_cbm) == 0:
            raise Exception("Projections CBM not found in vasprun.xml")

        cbm_projection_array = list(
            self.band_structure.get_cbm()["projections"].values()
        )[0]
        return self._group_projection_df(cbm_projection_array)

    def _group_projection_df(self, projection_array: list) -> pd.DataFrame:
        """
        Recieve projection array and group it in a dataframe with
        the projection related to each orbital group s,p and d.

        Args:
            projection_array (list): List that represents the contribution of each
            orbital s, px, py, pz, dxy, dyz, dz2, dxz and dx2y2 for each atom in
            last valence band or first conduction band. For instance, for GaN:
                [[0.     0.    ] ,[0.0115 0.1519] ,[0.0086 0.1132]
                 [0.025  0.331 ] ,[0.0239 0.    ] ,[0.07   0.    ]
                 [0.     0.    ] ,[0.0321 0.    ] ,[0.     0.    ]]

        Returns:
            projection_normalized_df (pandas.DataFrame):
            pandas dataframe that represents the character
            of each atom for each orbital group s, p and d in first
            conduction band. For instance, for GaN:
                           s     p    d
            element
              Ga          44.0  0.0  0.0
              N           56.0  0.0  0.0
        """
        projection_df = (
            pd.DataFrame(
                projection_array.T,
                index=[X.symbol for X in self.band_structure.structure.species],
                columns=[ORBITALS[i] for i in range(0, len(projection_array))],
            )
            .reset_index()
            .rename(columns={"index": "element"})
            .groupby("element")
            .agg("sum")
        )

        def join_orbitals(cols): 
            return [
            cat for col in cols for cat in ORBITAL_GROUP if col.startswith(cat)
        ]
        projection_df = projection_df.groupby(
            join_orbitals(projection_df.columns), axis=1
        ).sum()
        projection_normalized_df = projection_df.div(projection_df.sum().sum())

        return projection_normalized_df.mul(100).round()
